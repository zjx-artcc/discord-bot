name: Deploy bot

on:
  push:
    branches: 
      - 'master'
  workflow_dispatch:
  
jobs: 
  build_bot:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Extract commit hash
        id: commit_hash
        run: |
          COMMIT_HASH=${GITHUB_SHA::7} # Get the first 7 characters of the commit hash
          echo "COMMIT_HASH=${COMMIT_HASH,,}" >> $GITHUB_ENV # Convert to lowercase
      
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version number
        run: |
          if [ -f "package.json" ]; then
            VERSION=v$(node -p "require('./package.json').version")-${{ steps.extract_branch.outputs.branch }}.${{ env.COMMIT_HASH }}
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
            npm version "${VERSION}" --no-git-tag-version --allow-same-version
          else
            echo "package.json not found!"
            exit 1
          fi

      - name: Create env
        run: |
          echo "NODE_ENV=production" >> .env
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" >> .env
          echo "VATUSA_API_KEY=${{ secrets.VATUSA_API_KEY }}" >> .env
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .env
          echo "SENTRY_ORG=vzjx-artcc" >> .env
          echo "SENTRY_PROJECT=discord-bot" >> .env
          echo "GUILD_ID=786758356194164757" >> .env
          echo "CLIENT_ID=1381423842420985947" >> .env
          echo "NODE_ENV=production" >> .env


      # Debug
      - name: Debug log
        run: cat .env | sed 's/./& /g'
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.extract_branch.outputs.branch }}-latest
            ghcr.io/${{ github.repository }}:${{ steps.extract_branch.outputs.branch }}
          
  deploy:
    runs-on: self-hosted
    needs: build_bot
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Login to registry
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
    
      - name: Pull latest image
        run: docker pull ghcr.io/${{ github.repository }}:master

      - name: Run container
        run: docker compose up -d